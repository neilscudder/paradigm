#!/bin/sh
# PARADIGM 0.6.1 Copyright 2014 @neilscudder
# GNU GPL <http://www.gnu.org/licenses/>.

main() {  ### Called at bottom of script
  getOptions $@
  logIt I "--- START ---"
  checkPid
  [ $PROXYMODE ] && establishProxy || establishTunnel
  echo "Paradigm for ${SERVICENAME} logged to ${LOGFILE}"
  [ $TESTER ] && tail -n40 $LOGFILE
}

# http://linuxcommand.org/wss0150.php
error_exit() {
  logIt E "${1:-"Unknown Error"}"
  exit 1 # only exits subshell
}

getOptions() {
  # http://stackoverflow.com/a/14203146
  OPTIND=1
  while getopts "hl:p:tu:X" opt; do
    case "$opt" in
    h)showHelp
      ;;
    l)readonly LOGFILE="$OPTARG"
      ;;
    p)readonly SERVERPORT=$OPTARG
      ;;
    t)readonly TESTER=1
      ;;
    u)readonly CONTROLUSER="$OPTARG"
      ;;
    X)readonly PROXYMODE=1
      ;;
    esac
  done
  shift $((OPTIND-1))
  [ "$1" = "--" ] && shift
  
  if [ ! $TESTER ]; then
    # from http://stackoverflow.com/a/13864829/5045643
    [ -z ${CONTROLUSER+x} ] && readonly CONTROLUSER="paradigm"
    [ -z ${SERVERPORT+x} ] && readonly SERVERPORT=22
    [ -z ${LOGFILE+x} ] && readonly LOGFILE="$HOME/log.paradigm"
    readonly PLAYNODE="$1"
    readonly SERVICENAME="$2"
    readonly SERVICEPORT=$3
    readonly CONTROLSERVER="$4"
  else
    readonly CONTROLUSER="convict"
    readonly SERVERPORT=42
    readonly LOGFILE="./log.paradigm"
    readonly PLAYNODE="Barb"
    readonly SERVICENAME="MPD"
    readonly SERVICEPORT=6600
    readonly CONTROLSERVER="control"
  fi
}


checkPid() {
  logIt I "checkPid"
  local pidFile=/tmp/paradigm-${SERVICENAME}.pid
  pid=$(cat "$pidFile" || logIt W "pidFile not found.")

  if [ $pid ]; then
    logIt I "$pid set."
set -x
    if kill -0 $pid; then
      logIt I "pid running, exiting."
      exit 0
    else
  #    rm -f ${pidfile}
      logIt W "pid not found running"
    fi
  fi
set +x
}


logIt() {
  [ -z ${PLAYNODE+x} ] && echo "PLAYNODE not set!"
  a="$(date +"%m-%d-%y-%T") ${PLAYNODE} - ${SERVICENAME} - "
  case $1 in
    I)
      b="${a}II"
    ;;
    W)
      b="${a}WW"
    ;;
    E)
      b="${a}EE"
      #echo "${b} - ${2}" 1>&2
    ;;
  esac
  echo "${b} - ${2}" >> $LOGFILE
}


getPortalias() {
  logIt I "getPortalias"

  portalias=$(sshFunction) 

  if [ -z $portalias ]; then
    error_exit "Portalias not set."
  else
    logIt I "Portalias is ${portalias}"
    echo "$portalias"
  fi
}

sshFunction() {
  local remoteCmd="cat \
    'portalias-${SERVICENAME}' \
    | grep '^${PLAYNODE}' \
    | /usr/bin/cut -d^ -f2"

  local sshArgs=""

  /usr/bin/ssh -q \
    -p ${SERVERPORT} \
    -o ConnectTimeout=5 \
    -o ControlMaster=no \
    ${CONTROLUSER}@${CONTROLSERVER} \
    "${remoteCmd}"

  if [ "$?" = "0" ] ; then
    logIt I "gp sshFunction success."
  else
    error_exit "gp sshFunction failed."
  fi
}

establishTunnel() {
  logIt I "establishTunnel"
  portalias=$(getPortalias)
  local pidFile=/tmp/paradigm-${SERVICENAME}.pid
  logIt I "ports $portalias $SERVERPORT"
  /usr/bin/ssh \
  -p ${SERVERPORT} \
  -o ServerAliveCountMax=2 \
  -o ServerAliveInterval=45 \
  -o ControlMaster=no \
  -o ExitOnForwardFailure=yes \
  -N \
  -R ${portalias}:localhost:${SERVICEPORT} \
  ${CONTROLUSER}@${CONTROLSERVER} \
  >> $LOGFILE 2>&1 \
  || error_exit "establishTunnel ssh failed." \
  &
  pid=$!
  wait $!
  echo $! > "${pidFile}"
  if [ "$?" = "0" ] ; then
    logIt I "establishTunnel success."
    echo $pid > ${pidFile}
  else
    error_exit "establishTunnel exit non zero"
  fi
}


establishProxy() {
  logIt I "establishProxy"
  local pidFile=/tmp/paradigm-${SERVICENAME}.pid
  /usr/bin/ssh \
  -p ${SERVERPORT} \
  -q \
  -o ServerAliveCountMax=2 \
  -o ServerAliveInterval=45 \
  -o ControlMaster=no \
  -o ExitOnForwardFailure=yes \
  -N \
  -D ${SERVICEPORT} \
  ${CONTROLUSER}@${CONTROLSERVER} & \
  echo $! > "${pidFile}" &
}


showHelp() {
  cat << EOF

Usage: [OPTION] PLAYNODE SERVICENAME SERVICEPORT SERVER

-h
  Print this usage text.
-u 
  User account on server. Default=paradigm.
-p
  Server listening port. Default=22.
-X 
  Proxy mode.

A playnode is a name to define a group of service ports,
usually the client hostname.
User account on remote server with shell access required.
Server side flatfile is named portalias-SERVICENAME.
Formatted one playnode per line like this: dummy^32767
Where dummy is the playnode name, and 32767 is the portalias.

Examples: 
  paradigm PlaynodeName Shell 22 control.server.com
  paradigm -u user -p 443 -l /var/lib/paradigm/log.paradigm \
PlaynodeName MPD 6600 control.server.com

EOF
  exit 0
}


# Call the first function to start
main $@
exit 0
