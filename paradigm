#!/bin/sh
# PARADIGM 1.0.3 Copyright 2015 @neilscudder
# Licenced under the GNU GPL <http://www.gnu.org/licenses/>.

main()
{
  local configDir
  local configFile
  configDir="${1:-"$HOME/.paradigm"}"
  [ -e $configDir ] || showHelp "Config dir does not exist!"
  for configFile in "$configDir"/*; do
    . $configFile # source
    [ -z ${PLAYNODE+x} ] && showHelp "Problem with config file"
    logIt I "---$configFile---"
    tunnelCheck
  done
  logIt I "All config files checked."
}

tunnelCheck() 
{              
  logIt I "tunnelCheck"
  local pidFile=/tmp/paradigm-${SERVICENAME}.pid

  if [ -e "$pidFile" ]; then
    local pid=$(cat "$pidFile")
    logIt I "pidFile found, pid is ${pid}"
  else
    logIt W "pidFile not found"
    establishTunnel
  fi

  if [ $pid ]; then
    logIt I "$pid found"
    if kill -0 $pid; then
      logIt I "pid running, exiting"
    else
      rm -f ${pidfile}
      logIt W "pid not found running"
      establishTunnel
    fi
  fi
}

establishTunnel() 
{
  logIt I "establishTunnel"
  portalias=$(getPortalias)
  local pid=$(sshTunnel ${portalias})

  if [ -z $pid ]; then
    error_exit "pid not set"
  else
    logIt I "pid is ${pid}"
    local pidFile=/tmp/paradigm-${SERVICENAME}.pid
    echo "$pid" > "$pidFile"
  fi
}

sshTunnel() 
{
  portalias="$1"

  /usr/bin/ssh \
    -q \
    -N \
    -p ${SERVERPORT} \
    -o ConnectTimeout=3 \
    -o ServerAliveCountMax=2 \
    -o ServerAliveInterval=45 \
    -o ControlMaster=no \
    -o ExitOnForwardFailure=yes \
    -R ${portalias}:localhost:${SERVICEPORT} \
    ${CONTROLUSER}@${CONTROLSERVER} \
    >> /dev/null 2>&1 \
    & echo "$!"
# Echo returns the value
}

getPortalias() 
{
  logIt I "getPortalias"
  local portalias=$(sshPortalias) 

  if [ -z $portalias ]; then
    error_exit "Portalias var is empty"
  else
    logIt I "Portalias is ${portalias}"
    echo "$portalias"
  fi
}

sshPortalias() 
{
  /usr/bin/ssh \
    -q \
    -p ${SERVERPORT} \
    -o ConnectTimeout=5 \
    -o ControlMaster=no \
    ${CONTROLUSER}@${CONTROLSERVER} \
    "cat \
    'portalias-${SERVICENAME}' \
    | grep '^${PLAYNODE}' \
    | /usr/bin/cut -d^ -f2"

  if [ "$?" = "0" ] ; then
    logIt I "sshPortalias success"
  else
    error_exit "sshPortalias failed"
  fi
}

error_exit() 
{
  logIt E "${1:-"Unknown Error"}"
  exit 1
}

logIt() 
{
  [ -z ${PLAYNODE+x} ] && echo "PLAYNODE not set!"
  local a="$(date +"%m-%d-%y-%T") ${PLAYNODE} - ${SERVICENAME} - "
  local b=""
  case $1 in
    I)
      b="${a}II"
    ;;
    W)
      b="${a}WW"
    ;;
    E)
      b="${a}EE"
    ;;
  esac
  echo "${b} - ${2}" >> $LOGFILE
}

showHelp() 
{
  echo "ERROR:

  $1
  "
  cat << EOF
Usage:
  paradigm [CONFIGDIR]
  CONFIGDIR defaults to ~/.paradigm
  Reads one service per file in the format below.
  Run every minute to check all services and/or re-establish tunnels.

Example config file (~/.paradigm/Dummy-MPD.conf): 

CONTROLUSER="convict"
SERVERPORT=42
LOGFILE="./log.paradigm"
PLAYNODE="Dummy"
SERVICENAME="MPD"
SERVICEPORT=6600
CONTROLSERVER="control"

EOF
  exit 1
}

# Call the first function to start
main "$@"
exit 0
